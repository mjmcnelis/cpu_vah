#include <math.h>
#include <cmath>
#include "../include/Macros.h"
#include "../include/Precision.h"
#include "../include/EquationOfState.h"

precision energy_density_cutoff(precision e_min, precision e)
{
	precision e_cut = fmax(0., e);

	return e_cut  +  e_min * exp(- e_cut / e_min);	// regulated energy density asymptotes to e_min
													// as e -> 0 (avoids discontinuites in energy profile)
	//return fmax(e_min, e);						// hard cutoff
}


// it might be better to make an equation class to store the variables
// what would be better to use? a fit function or interpolation?

equation_of_state::equation_of_state(precision e_in)
{
	e1  = e_in;			// compute powers
	e2  = e1  * e1;
	e3  = e2  * e1;
	e4  = e3  * e1;
	e5  = e4  * e1;
	e6  = e5  * e1;
	e7  = e6  * e1;
	e8  = e7  * e1;
	e9  = e8  * e1;
	e10 = e9  * e1;
	e11 = e10 * e1;
	e12 = e11 * e1;
	e13 = e12 * e1;
	e14 = e13 * e1;
	e15 = e14 * e1;
	e16 = e15 * e1;
	e17 = e16 * e1;
	e18 = e17 * e1;
	e19 = e18 * e1;
	e20 = e19 * e1;
	e21 = e20 * e1;
	e22 = e21 * e1;
	e23 = e22 * e1;
	e24 = e23 * e1;
	e25 = e24 * e1;
	e26 = e25 * e1;
}

equation_of_state::~equation_of_state()
{

}


precision equation_of_state::equilibrium_pressure()
{
	double p;

	// for equation of state switching, should avoid macros (right this needs to be updated eventually)
#ifdef LATTICE_QCD
#ifdef BEST 				 	// BEST equation of state
	p = (7.190009839568977e-11 - 1.395774723345131e-6*e1 - 0.0007294542973192687*e2 - 0.02755303080259852*e3 +
	0.6777139269471448*e4 - 2.5676157307802105*e5 - 198.27861304635795*e6 + 2892.771435243516*e7 -
	20443.08028356625*e8 + 26431.269835104275*e9 + 54554.71732475857*e10 - 136384.84011985105*e11 +
	170729.28261000666*e12 - 109354.23042660154*e13 + 47809.54395258853*e14 - 10743.012809422258*e15 +
	1573.4464820882827*e16 + 73.09843404933184*e17 + 33.75839022332086*e18 + 22.370532570822895*e19 +
	0.8661540343959165*e20 + 0.00823546974656238*e21 + 0.000011977402417543487*e22 -
	3.823554294234436e-8*e23 - 4.015185097090365e-11*e24)/
	(-7.4539090540790035e-6 - 0.003091276650747094*e1 - 0.10715341272046117*e2 + 2.2410756562049117*e3 +
	3.147397633194132*e4 - 977.4165681862902*e5 + 12218.017097992242*e6 - 74668.39069402599*e7 -
	8194.662719386062*e8 + 604927.8696703409*e9 - 1.1027507974839194e6*e10 + 1.2140822058208985e6*e11 -
	738923.1898118919*e12 + 316237.5914113029*e13 - 71392.6962417791*e14 + 11335.190090043036*e15 -
	109.3640028588883*e16 + 449.6151741523075*e17 + 106.96820874330709*e18 + 3.348031043873812*e19 +
	0.027585414077599367*e20 + 0.0000337469979928549*e21 - 1.252632993005512e-7*e22 -
	1.2345479534532178e-10*e23 + 1.2680975061416364e-16*e24);

#else							// Wuppertal-Budapest equation of state
	p = (5.075564888183663e-8 - 0.0000562169058017086*e1 - 0.22264079778393814*e2 - 96.54111777097086*e3 -
     1756.4940900442318*e4 - 3839.550980182813*e5 + 43314.75256472724*e6 + 21484.684622349*e7 -
     130046.39756226703*e8 + 31055.12603591556*e9 + 39710.876799090234*e10 - 1699.2739439957898*e11 +
     457.07148223707463*e12 - 2.6124197272811243*e13 - 10.644483495536646*e14 + 0.9338976604508398*e15 -
     0.08154575247701629*e16 + 0.007945758495188623*e17 - 0.00032112712608626663*e18 +
     1.3849387546528496e-6*e19 + 1.0319807626964377e-7*e20 + 2.4411168029716984e-10*e21 -
     5.320369073003463e-14*e22)/
   (-0.00014387478025277176 - 1.1792584683886174*e1 - 389.6323718241302*e2 - 6977.840105310985*e3 -
     30423.03772874304*e4 + 172511.16609332536*e5 + 395148.28097748733*e6 - 927429.602347526*e7 -
     1969.7658108555734*e8 + 442307.7633162228*e9 - 61081.643776514844*e10 + 10031.861047012935*e11 -
     1004.1267102196177*e12 + 34.34877412677497*e13 - 1.1282071952740738*e14 - 0.03273759822023652*e15 +
     0.020818561379492638*e16 - 0.0011806678144587483*e17 + 9.452128098430316e-6*e18 +
     3.5138214637099674e-7*e19 + 7.566271511306246e-10*e20 - 1.7260152864418335e-13*e21 +
     2.3271917596080208e-18*e22);
#endif

#else
	p = e1 / 3.;
#endif
	return fmax(p, 0.);
	//return p;
}


precision equation_of_state::speed_of_sound_squared()
{
	double cs2;

#ifdef LATTICE_QCD
#ifdef BEST 				 	// BEST equation of state
	cs2 = (-8.313077825923736e-14 - 9.91131461236627e-11*e1 + 4.9370463998042573e-8*e2 + 0.000012403698595004402*e3 -
	0.0006912983927137311*e4 + 0.021581851285318674*e5 - 0.3403540349639598*e6 + 2.571364021486668*e7 +
	6.673093766060017*e8 - 243.3375964116734*e9 + 1814.6643869387997*e10 - 2548.2582086974326*e11 +
	2765.630246068556*e12 - 1875.00259667093*e13 + 1108.2896957487499*e14 - 404.3458694331876*e15 +
	102.97057964895681*e16 - 8.666160558180495*e17 + 1.7034256926427882*e18 + 0.1509835583259864*e19 +
	0.0022131911506897946*e20 - 2.1845675724304455e-6*e21 - 4.963727093415996e-9*e22)/
	(-4.616396862584361e-13 - 3.6987626554837435e-10*e1 + 2.2199967297197156e-7*e2 + 0.00004628916421708627*e3 -
	0.002304008118798134*e4 + 0.06298983609139512*e5 - 0.6406277787382678*e6 - 3.5167650188178268*e7 +
	192.24184427400343*e8 - 2117.4295381872043*e9 + 11548.342629589715*e10 - 13151.384905721165*e11 +
	11212.491449000934*e12 - 4742.373401294556*e13 + 3067.8255158942507*e14 - 1331.2232187171192*e15 +
	433.2239004538602*e16 - 32.73752014120429*e17 + 8.258268788269858*e18 + 0.5504745185457142*e19 +
	0.006760130196823705*e20 - 7.032724563397889e-6*e21 - 1.513558086157459e-8*e22);

#else							// Wuppertal-Budapest equation of state
	cs2 = (-2.178802623232077e-8 - 0.000028058668053969316*e1 + 0.0707167841389791*e2 + 30.072115831801668*e3 +
	2235.4049904745293*e4 + 41418.70672195756*e5 + 358508.8110784304*e6 + 1.1590875075390663e6*e7 +
	954248.3211844995*e8 - 50721.294467359*e9 + 16465.82334234105*e10 - 908.4548567500927*e11 -
	252.7359144972058*e12 + 53.91419969140143*e13 - 12.026262562371759*e14 + 1.6556097635897582*e15 -
	0.11488691302515308*e16 + 0.003829345418196134*e17 - 0.000041174256263276295*e18 -
	6.534667798749817e-7*e19 + 1.251380387174281e-8*e20 + 4.584558932434191e-11*e21 +
	1.7120085646159452e-14*e22)/
	(-1.2153701643802135e-7 - 0.00008294478323975135*e1 + 0.3175076406677123*e2 + 120.51666836485872*e3 +
	8774.085137082211*e4 + 182446.2005223917*e5 + 1.995089196043474e6*e6 + 9.161741300187482e6*e7 +
	8.731822712749625e6*e8 - 2.156494891121747e6*e9 + 482885.5410394763*e10 - 69411.77018853552*e11 +
	6760.932013473378*e12 - 510.63270233261545*e13 + 8.175727094657239*e14 + 3.248437668454592*e15 -
	0.32487966107613314*e16 + 0.012482882608729243*e17 - 0.00015856500475657135*e18 -
	1.7681600567702772e-6*e19 + 4.075596322495956e-8*e20 + 1.4197025154850574e-10*e21 +
	5.1982187467659597e-14*e22);
#endif

#else
	cs2 = 1./3.;
#endif
	//return fmax(cs2, 0.);
	return cs2;
}


precision equation_of_state::effective_temperature(precision conformal_prefactor)
{
	double T;

#ifdef LATTICE_QCD
#ifdef BEST 				 	// BEST equation of state
	T = (6.354702650133721e-7 + 0.0016261450306068567*e1 + 0.45825931456340785*e2 + 14.188693412528751*e3 -
	314.7885041652167*e4 + 2378.640132157695*e5 + 25273.133749493598*e6 - 140224.9709264792*e7 +
	106293.04579291707*e8 + 89517.1975351415*e9 - 70843.79668025293*e10 + 28526.039709340683*e11 -
	36943.18834114948*e12 + 189251.03702063803*e13 - 51967.87699872343*e14 + 7691.785198380105*e15 +
	9513.282503693723*e16 + 482.55672261331955*e17 + 5.389198283394992*e18 + 0.013817918026243032*e19 +
	5.570450207372526e-6*e20)/
	(4.1560932681286e-6 + 0.006747031242574442*e1 + 1.285101644232421*e2 + 19.36905363832382*e3 - 639.5077730169339*e4 +
	7119.547834859753*e5 + 22354.06915581833*e6 - 197845.8735584382*e7 + 189101.14796407992*e8 +
	117736.90044970746*e9 - 193723.6698826523*e10 + 186595.1710000764*e11 - 158312.42292489434*e12 +
	320049.3255747058*e13 - 111686.06861346996*e14 + 25750.640860019877*e15 + 9437.496426864122*e16 +
	334.06415213565924*e17 + 2.6440125443979445*e18 + 0.004563233640606438*e19 + 9.788656932810127e-7*e20);

#else							// Wuppertal-Budapest equation of state
	T = (2.805869997121848e-7 + 0.0016687441079320283*e1 + 1.4839310262134133*e2 + 328.65797655737566*e3 +
	20588.110903563724*e4 + 333446.5800069805*e5 + 697363.6527955428*e6 - 1.726106947423048e6*e7 -
	1.4534822597460109e6*e8 + 1.6041416532072239e6*e9 + 647591.4839233705*e10 + 196069.7894032533*e11 -
	16477.03273134262*e12 + 2239.163501912496*e13 - 139.4471798412599*e14 - 56.177945728815814*e15 +
	6.286896403438542*e16 - 0.12504404549704667*e17 - 0.005436655511967141*e18 + 0.00012779108537184535*e19 +
	1.6538755980411776e-6*e20 + 3.4758922647083855e-9*e21 + 1.1123123823913987e-12*e22)/
	(2.068456663176566e-6 + 0.008270169005048402*e1 + 5.525127318169887*e2 + 946.7751657179253*e3 +
	45753.72453554468*e4 + 551625.3416059491*e5 + 797512.3880244014*e6 - 2.73675388935463e6*e7 -
	1.4424551842244035e6*e8 + 2.257817112071547e6*e9 + 747469.0482756988*e10 + 222730.76660418292*e11 -
	30716.511863420095*e12 + 4901.037822665323*e13 - 575.9147472089788*e14 - 14.771489098529415*e15 +
	4.999666623329036*e16 - 0.17506789169898215*e17 - 0.0018686576242234758*e18 + 0.00009965134321146708*e19 +
	7.777887562653655e-7*e20 + 1.0812709087693346e-9*e21 + 1.8461582296389239e-13*e22);
#endif

#else
	T = pow(e1 / conformal_prefactor, 0.25);
#endif
	//return fmax(T, 0.);
	return T;
}


precision equation_of_state::z_quasi(precision T)		
{
	double z;									// mass / T

#ifdef LATTICE_QCD
	double T1  = (double)T;
	double T2  = T1  * T1;
	double T3  = T2  * T1;
	double T4  = T3  * T1;
	double T5  = T4  * T1;
	double T6  = T5  * T1;
	double T7  = T6  * T1;
	double T8  = T7  * T1;
	double T9  = T8  * T1;
	double T10 = T9  * T1;
	double T11 = T10 * T1;
	double T12 = T11 * T1;
	double T13 = T12 * T1;
	double T14 = T13 * T1;
	double T15 = T14 * T1;
	double T16 = T15 * T1;
	double T17 = T16 * T1;
	double T18 = T17 * T1;
	double T19 = T18 * T1;
	double T20 = T19 * T1;
	double T21 = T20 * T1;
	double T22 = T21 * T1;
#ifdef BEST
	z = (-0.024849858891137756 + 0.47847736373416083*T1 - 4.61918347715829*T2 + 29.068429322455216*T3 - 124.71500934989882*T4 +
	351.97333774650616*T5 - 574.5614209565085*T6 + 242.47052067855995*T7 + 939.3631556394441*T8 -
	1497.7161122587*T9 - 869.1541853013247*T10 + 4463.510513169322*T11 - 3155.388775545533*T12 -
	3669.9148634996404*T13 + 6025.055619284398*T14 + 2530.010229436638*T15 - 12377.828009524466*T16 +
	11064.662640234146*T17 - 1367.8202341736014*T18 - 5153.441529030352*T19 + 4692.66519828337*T20 -
	1839.6486572686679*T21 + 295.61128212686765*T22)/
	(-0.0013353616408144687 + 0.01630070964709733*T1 - 0.0940784693091734*T2 + 0.39761014119292426*T3 -
	1.0902179925763675*T4 - 0.6350707349088213*T5 + 17.49970782818318*T6 - 54.253564043787605*T7 +
	31.303530751694325*T8 + 188.09655216728908*T9 - 410.4192207829322*T10 - 46.729398612517514*T11 +
	1123.465391973284*T12 - 861.0382656839028*T13 - 2009.5894022610644*T14 + 4034.061184550695*T15 +
	82.58158725655181*T16 - 9138.895740558035*T17 + 15147.595016391986*T18 - 13280.168404822247*T19 +
	7035.328067245568*T20 - 2154.9632787206424*T21 + 297.54649144190483*T22);
#else
	z = (0.09170766362432285 + 31.477893867949994*T1 - 171.4720923041977*T2 + 348.0505433081136*T3 - 278.01508474473576*T4 -
	4.090099452538992*T5 + 69.51455657407085*T6 + 57.572779749854725*T7 - 14.887082827580162*T8 -
	61.65146999493058*T9 - 13.081983675373781*T10 + 38.32427558472125*T11 + 17.159335415770617*T12 -
	20.356371374162403*T13 - 14.437661706680801*T14 + 24.046217260682386*T15 + 18.24949542696214*T16 -
	33.837725550993*T17 - 25.73947128017313*T18 + 46.25407785818272*T19 - 1.3014208236011469*T20 -
	17.86161727824165*T21 + 5.995299077737301*T22)/
	(-0.2029627504235254 + 5.955678944772665*T1 - 26.14385042172914*T2 + 37.910032843493795*T3 + 12.89477746020681*T4 -
	99.75427327035554*T5 + 98.48666295844663*T6 + 9.217026288266831*T7 - 71.2407321036052*T8 +
	6.23448005926286*T9 + 53.36649722702714*T10 + 1.894894203426874*T11 - 41.43766327605702*T12 -
	18.439061197583815*T13 + 25.12987742471087*T14 + 29.06484792258054*T15 - 4.674554626090905*T16 -
	25.34321247283328*T17 - 11.06682311125567*T18 + 14.537948966360654*T19 + 20.210157950158084*T20 -
	22.377274103422923*T21 + 5.77910353680565*T22);
#endif
#else
	z = 0;
#endif
	//return fmax(z, 0.);
	return z;
}


precision equation_of_state::mdmde_quasi()
{
	double mdmde;

#ifdef LATTICE_QCD
#ifdef BEST
	mdmde = (-1.1927967184213977e-16 - 6.93974002078785e-14*e1 + 1.9869461829302351e-10*e2 - 8.208591908642511e-8*e3 +
	2.1583246622414057e-6*e4 + 0.00295868687991236*e5 - 0.17822845705127216*e6 + 5.475450243005113*e7 -
	112.74127105299743*e8 + 1792.0308572672911*e9 - 23579.344765116297*e10 + 255189.75987280835*e11 -
	2.150714313919863e6*e12 + 1.3217785117761483e7*e13 - 5.577544865333324e7*e14 + 1.5312086360101765e8*e15 -
	2.6254487591150045e8*e16 + 2.8330538234837854e8*e17 - 2.0088099636636007e8*e18 + 8.347774051502697e7*e19 -
	2.0059418552083727e7*e20 + 2.3761027880381965e6*e21 - 177245.14183632794*e22 + 14339.985029833542*e23 -
	425.93472333750054*e24 - 2.577223524643679*e25 - 0.0008855556603909956*e26)/
	(3.0182841741089683e-21 - 6.577567640649949e-16*e1 + 4.815941355358405e-13*e2 + 9.975024228049674e-11*e3 -
	1.3894925021353866e-7*e4 + 0.000022993194037377313*e5 + 0.0012773521621841865*e6 - 0.1065579618826654*e7 +
	3.590371338387996*e8 - 80.48923667947855*e9 + 1393.5544507541963*e10 - 18894.187421954797*e11 +
	192969.21573898598*e12 - 1.408144757359425e6*e13 + 6.7921946177834235e6*e14 - 1.8712911902045455e7*e15 +
	1.804160400553675e7*e16 + 2.8706083779758964e7*e17 - 6.826894176947126e7*e18 + 6.86350446212044e7*e19 -
	3.355884995662966e7*e20 + 9.82011720923614e6*e21 - 1.659176852926879e6*e22 + 322524.77250394184*e23 -
	29476.7992154663*e24 - 486.03870527880787*e25 - 0.8934224937867911*e26);
#else
	mdmde = (1.95329061017391e-8 - 3.3864591099208037e-7*e1 - 0.010132734695886053*e2 + 1.6753243797332422*e3 +
	505.0230978675841*e4 + 11677.208913547789*e5 - 55703.604828668744*e6 + 1479.0200007231247*e7 +
	61761.447490081344*e8 + 143627.25733808105*e9 + 226690.4925520967*e10 - 293050.8720934472*e11 -
	94524.55168666519*e12 - 61017.68288638332*e13 - 229443.3864504896*e14 + 180361.8519145171*e15 +
	243634.70610154347*e16 - 159284.78192644802*e17 + 21245.39044520998*e18 - 1076.649585647334*e19 +
	81.46116084351611*e20 - 8.452263332922929*e21 + 0.2891561651312173*e22 + 0.00010477110249757475*e23 -
	5.924454664628676e-7*e24)/
	(1.263748595093237e-11 + 5.369270863996899e-8*e1 - 0.000031466506506184786*e2 - 0.009205496057306299*e3 +
	4.121377887104778*e4 + 433.1622186125416*e5 + 6370.443724035817*e6 + 38796.78488518795*e7 -
	100233.238972959*e8 + 69521.1493253967*e9 - 572164.8929417476*e10 + 695111.7298044853*e11 -
	607486.3603072201*e12 + 647957.760858581*e13 + 154931.63752634017*e14 - 407878.1511277599*e15 +
	318788.79614717636*e16 - 403925.1609669887*e17 + 195835.5382324677*e18 - 37733.36512024303*e19 +
	5990.489285897725*e20 - 507.5085020546778*e21 + 12.709293209963018*e22 + 0.18803526530907066*e23 -
	0.0002519337243322702*e24); 
#endif
#else
	mdmde = 0;
#endif
	return mdmde;
}


precision equation_of_state::mdmdT_quasi(precision T)
{
	double mdmdT;

#ifdef LATTICE_QCD
	double T1  = (double)T;
	double T2  = T1  * T1;
	double T3  = T2  * T1;
	double T4  = T3  * T1;
	double T5  = T4  * T1;
	double T6  = T5  * T1;
	double T7  = T6  * T1;
	double T8  = T7  * T1;
	double T9  = T8  * T1;
	double T10 = T9  * T1;
	double T11 = T10 * T1;
	double T12 = T11 * T1;
	double T13 = T12 * T1;
	double T14 = T13 * T1;
	double T15 = T14 * T1;
	double T16 = T15 * T1;
	double T17 = T16 * T1;
	double T18 = T17 * T1;
	double T19 = T18 * T1;
	double T20 = T19 * T1;
	double T21 = T20 * T1;
	double T22 = T21 * T1;
	double T23 = T22 * T1;
	double T24 = T23 * T1;
#ifdef BEST
	mdmdT = (0.005608417560932825 - 0.15965291363321024*T1 + 2.146506769835765*T2 - 17.354276998247887*T3 + 90.32274484030113*T4 -
	303.9265552567468*T5 + 618.9905393945672*T6 - 547.5562832445656*T7 - 521.9462027835724*T8 +
	1721.3151516515818*T9 - 731.2096347868167*T10 - 1443.9401042636614*T11 - 870.4569183528523*T12 +
	6551.503232236555*T13 - 2627.2113280358517*T14 - 12604.448964689245*T15 + 14332.100188698501*T16 +
	15118.33682963929*T17 - 53173.87779136548*T18 + 64976.55134638874*T19 - 47204.94046858447*T20 +
	22377.742131747196*T21 - 6920.108193943858*T22 + 1288.320465405942*T23 - 110.20189027654786*T24)/
	(0.0009776516320639935 - 0.027168677980705117*T1 + 0.36163512058041053*T2 - 2.9924085159293328*T3 +
	16.698862761287625*T4 - 64.11109829416328*T5 + 165.27786952094266*T6 - 255.31075747680555*T7 +
	111.74686388172418*T8 + 408.3025042325941*T9 - 816.3191564786562*T10 + 158.2107422849028*T11 +
	1375.9994607373835*T12 - 1655.0619808217239*T13 - 646.2615866628834*T14 + 3079.1521065329284*T15 -
	2128.8975162162155*T16 - 1555.3566029797023*T17 + 3997.0020859286547*T18 - 3369.047525396329*T19 +
	1418.9666183145537*T20 - 165.7711875848563*T21 - 124.81414498920952*T22 + 61.01936402944954*T23 -
	8.765538990619126*T24);
#else
	mdmdT = (-3.028163612386263 + 98.73401869758305*T1 - 511.80174808391024*T2 + 1055.0741832198837*T3 - 846.746417261978*T4 -
     110.30561292661812*T5 + 397.43649852839525*T6 + 149.73095985304266*T7 - 190.09344913083802*T8 -
     185.27871805472296*T9 + 41.42701637225608*T10 + 199.19717383158633*T11 + 24.17109944589548*T12 -
     225.5221602242409*T13 + 41.118417163779505*T14 + 172.29042730398783*T15 - 102.18896578757689*T16 -
     76.7720473291614*T17 + 117.24436583720603*T18 - 53.45778874409243*T19 + 8.770783901630884*T20)/
   (0.8206250128057959 - 0.4164311946445899*T1 - 15.883545739669731*T2 + 34.49470094656446*T3 + 69.33570333148452*T4 -
     382.55981003290265*T5 + 612.1392812015968*T6 - 333.37199795398413*T7 - 221.07178216721667*T8 +
     329.2271693848648*T9 + 57.438161620880535*T10 - 238.2487820559714*T11 - 9.292954213897902*T12 +
     172.7836083273217*T13 - 31.044612393751912*T14 - 96.06511391366193*T15 + 54.81464315308174*T16 +
     4.809677278559935*T17 - 8.646938417696239*T18 + 0.1881364321986544*T19 + 0.5503683342350166*T20);
#endif
#else
	mdmdT = 0;
#endif
	return mdmdT;
}


precision equation_of_state::equilibrium_kinetic_pressure(precision T, precision conformal_prefactor)
{
	double p_kinetic;
	double T1 = (double)T;

#ifdef LATTICE_QCD
	double T2  = T1  * T1;
	double T3  = T2  * T1;
	double T4  = T3  * T1;
	double T5  = T4  * T1;
	double T6  = T5  * T1;
	double T7  = T6  * T1;
	double T8  = T7  * T1;
	double T9  = T8  * T1;
	double T10 = T9  * T1;
	double T11 = T10 * T1;
	double T12 = T11 * T1;
	double T13 = T12 * T1;
	double T14 = T13 * T1;
	double T15 = T14 * T1;
	double T16 = T15 * T1;
	double T17 = T16 * T1;
	double T18 = T17 * T1;
#ifdef BEST
	p_kinetic = (0.00713009747608799 - 0.178239519999552*T1 + 2.018512591164485*T2 - 13.80079263600403*T3 + 64.18438030847095*T4 - 216.99055266437165*T5 +
	557.7397322117549*T6 - 1129.1678142282658*T7 + 1849.9056915773876*T8 - 2478.8839032746123*T9 + 2673.5073156347235*T10 -
	2214.1731000157533*T11 + 1301.3834717338107*T12 - 476.40578439958205*T13 + 80.87408873718634*T14)/
	(3.663492996566946 - 47.509051949201286*T1 + 279.83261064081745*T2 - 990.6348739721601*T3 + 2349.9851287659176*T4 - 3941.5415453542337*T5 +
	4804.487048644571*T6 - 4304.437448115286*T7 + 2831.402877715671*T8 - 1351.9180865740618*T9 + 460.7826894778402*T10 -
	111.05606505926326*T11 + 18.78241524013343*T12 - 1.9167366155553527*T13 + 0.08919008903949448*T14);
#else
	p_kinetic = (-0.8914549103919248 + 22.893757617543578*T1 - 262.75853318435344*T2 + 1774.3319033783685*T3 - 7785.941416373705*T4 +
	22987.58545677857*T5 - 45027.79177363824*T6 + 52611.91278046044*T7 - 17408.57578517054*T8 -
	50285.45807317768*T9 + 86756.80430610973*T10 - 48526.419773410766*T11 - 19311.967677222812*T12 +
	42662.78439869659*T13 - 17448.827470929493*T14 - 7762.984305727031*T15 + 10479.701011089866*T16 -
	4048.6360628164325*T17 + 574.2449956937297*T18)/
	(-65.93242571950124 + 653.4768127891859*T1 - 2552.5311494461407*T2 + 4775.39114349216*T3 - 2840.749736406899*T4 -
	5692.808333734398*T5 + 13351.444318844557*T6 - 9404.456148503814*T7 - 4061.1306462544862*T8 +
	13945.826080790304*T9 - 14140.37193397386*T10 + 9827.411984075683*T11 - 6161.356026816977*T12 +
	3547.6386315042155*T13 - 1563.8902413865521*T14 + 455.5517084525443*T15 - 81.99893845743132*T16 +
	8.934040881028778*T17 - 0.4457653989639154*T18);
#endif
#else
	p_kinetic = conformal_prefactor * T1 * T1 * T1 * T1 / 3.;
#endif
	return p_kinetic;
}


precision equation_of_state::equilibrium_mean_field(precision T)
{
	double Beq;
#ifdef LATTICE_QCD
	double T1  = (double)T;
	double T2  = T1  * T1;
	double T3  = T2  * T1;
	double T4  = T3  * T1;
	double T5  = T4  * T1;
	double T6  = T5  * T1;
	double T7  = T6  * T1;
	double T8  = T7  * T1;
	double T9  = T8  * T1;
	double T10 = T9  * T1;
	double T11 = T10 * T1;
	double T12 = T11 * T1;
	double T13 = T12 * T1;
	double T14 = T13 * T1;
	double T15 = T14 * T1;
	double T16 = T15 * T1;
	double T17 = T16 * T1;
	double T18 = T17 * T1;
	double T19 = T18 * T1;
	double T20 = T19 * T1;
#ifdef BEST
	Beq = (0.050807553593981314 - 1.5689532639107107*T + 22.058925282111556*T2 - 186.46436942623802*T3 + 1054.8363701384187*T4 -
	4208.039545493059*T5 + 12118.826371672492*T6 - 25136.8737959246*T7 + 35854.55231319769*T8 -
	28711.571443848883*T9 - 6069.162219288527*T10 + 53559.81412173025*T11 - 78331.6574712575*T12 +
	58756.1396988773*T13 - 12443.794232270604*T14 - 23027.5229322638*T15 + 29559.10660409062*T16 -
	18193.57166869241*T17 + 6630.21829352344*T18 - 1368.9464729972105*T19 + 123.57849591412831*T20)/
	(54.333991663395125 - 892.1598816769438*T + 6678.706492335427*T2 - 30133.53859399463*T3 + 91127.7739984867*T4 -
	193659.35059973205*T5 + 292541.0089980787*T6 - 303878.2121603155*T7 + 183600.71746461073*T8 +
	7590.438830781842*T9 - 150077.88979897177*T10 + 178076.66061809257*T11 - 123525.97200512807*T12 +
	56749.22929795278*T13 - 16975.405747105848*T14 + 2887.6602368384947*T15 - 135.07044953188364*T16 -
	33.34448249826969*T17 + 4.918440361610946*T18 - 0.4806683822803251*T19 + 0.02067796139693879*T20);
#else
	Beq = (19.40792947323188 - 342.0263387469813*T + 2578.242086743804*T2 - 10619.929493490272*T3 + 24985.83034443322*T4 -
	32422.095136126005*T5 + 20631.134901306315*T6 - 9226.280024763879*T7 + 14807.369870741783*T8 -
	2888.3379582824937*T9 - 29195.318316647674*T10 + 14671.8936104707*T11 + 33946.737465802296*T12 -
	31656.730028637397*T13 - 4964.959699285339*T14 + 10877.8429393955*T15 + 1436.4665900587586*T16 -
	2649.0569522213736*T17 - 610.3672174408359*T18 + 755.1701409806524*T19 - 133.9584939041013*T20)/
	(19142.656974668585 - 154846.05101852873*T + 539267.185191327*T2 - 1.0215562949639153e6*T3 +
	1.0541671057321753e6*T4 - 393173.65077612136*T5 - 344907.32542035833*T6 + 486863.54785741604*T7 -
	194270.00402842*T8 - 28603.417269431873*T9 + 56129.67324026361*T10 - 16375.781761169725*T11 -
	7598.880720560649*T12 + 7007.200455460863*T13 + 330.54710937412455*T14 - 3505.431547985612*T15 +
	3130.5297967162674*T16 - 1600.0066738078033*T17 + 469.7385200718001*T18 - 72.04743960804596*T19 +
	4.597612981223469*T20);
#endif
#else
   Beq = 0;
#endif
   return Beq;
}


precision equation_of_state::beta_shear(precision T, precision conformal_prefactor)
{
	double beta_shear;
	double T1 = (double)T;

#ifdef LATTICE_QCD
	double T2  = T1  * T1;
	double T3  = T2  * T1;
	double T4  = T3  * T1;
	double T5  = T4  * T1;
	double T6  = T5  * T1;
	double T7  = T6  * T1;
	double T8  = T7  * T1;
	double T9  = T8  * T1;
	double T10 = T9  * T1;
	double T11 = T10 * T1;
	double T12 = T11 * T1;
	double T13 = T12 * T1;
	double T14 = T13 * T1;
	double T15 = T14 * T1;
	double T16 = T15 * T1;
#ifdef BEST
	beta_shear = (0.11389523069479185 - 2.705127789711982*T + 28.742274634585783*T2 - 179.70799505135633*T3 + 730.506119388531*T4 - 2007.1240462918665*T5 +
	3721.0091345659325*T6 - 4366.923562236631*T7 + 2347.927819272824*T8 + 1559.8495170149938*T9 - 4257.643429592799*T10 +
	3938.5865394866464*T11 - 1999.1891431300426*T12 + 551.2544143662707*T13 - 64.67817053548931*T14)/
	(-8.065469391396581 + 92.36219194757648*T - 453.6119231622029*T2 + 1282.9299920278522*T3 - 2333.58921706985*T4 + 2843.5221412837436*T5 -
	2291.373282720429*T6 + 1092.688273629689*T7 - 140.80190149751965*T8 - 177.18993543735297*T9 + 126.47676060292035*T10 -
	39.29732109229348*T11 + 6.547795713678674*T12 - 0.6094551149533467*T13 + 0.023633386710670345*T14);
#else
	beta_shear = (3.8849752086912623 - 81.75711548883612*T + 758.6855793464125*T2 - 4080.0043988595335*T3 + 13998.196317295955*T4 -
	31510.132744708902*T5 + 45243.06190393971*T6 - 35235.3406336028*T7 + 177.91096020599664*T8 +
	29147.604245677583*T9 - 25312.14305681918*T10 + 36.10028178319713*T11 + 17115.132549366466*T12 -
	16732.697486754332*T13 + 8789.832705192895*T14 - 2701.796835519705*T15 + 383.5056919121435*T16)/
	(177.6960254757862 - 869.2969326874477*T + 1319.1268753523589*T2 + 404.40956148532797*T3 - 3172.2287967031607*T4 +
	1651.5674255087415*T5 + 5021.62669182579*T6 - 9028.791696042206*T7 + 4970.041353891375*T8 +
	2231.4303081440057*T9 - 5594.563514770515*T10 + 4487.194614133707*T11 - 2135.863031817189*T12 +
	645.6924363953377*T13 - 120.68220509406726*T14 + 13.330024063412038*T15 - 0.6622117410668655*T16);
#endif
#else
	beta_shear = 4./15. * conformal_prefactor * T1 * T1 * T1 * T1;
#endif
	return beta_shear;
}


precision equation_of_state::beta_bulk(precision T)
{
	double beta_bulk;
	
#ifdef LATTICE_QCD
	double T1 = (double)T;
	double T2  = T1  * T1;
	double T3  = T2  * T1;
	double T4  = T3  * T1;
	double T5  = T4  * T1;
	double T6  = T5  * T1;
	double T7  = T6  * T1;
	double T8  = T7  * T1;
	double T9  = T8  * T1;
	double T10 = T9  * T1;
	double T11 = T10 * T1;
	double T12 = T11 * T1;
#ifdef BEST
	beta_bulk = (-0.07227796340001295 + 1.3143764840615304*T - 10.618632711354438*T2 + 50.49226038033788*T3 - 157.4895501326704*T4 + 339.56597470170806*T5 -
	518.8479144079654*T6 + 565.401177446674*T7 - 434.90715638011426*T8 + 229.10104947248428*T9 - 77.73510380062434*T10 +
	14.99701288452569*T11 - 1.2012010330086933*T12)/
	(36.286491731381375 - 385.4575151988946*T + 1863.5710590765027*T2 - 5417.869823144005*T3 + 10538.668878148343*T4 - 14431.58178913021*T5 +
	14242.335632907661*T6 - 10182.425674573899*T7 + 5216.5453702051245*T8 - 1858.714375839709*T9 + 434.4504198478326*T10 -
	59.390426532205105*T11 + 3.581827839432567*T12);
#else
	beta_bulk = (0.008510670056129977 - 1.353919995523633*T + 13.608904166522786*T2 - 51.321537229771266*T3 + 73.96045299666834*T4 +
	43.35307088459302*T5 - 305.47155148480124*T6 + 456.6456107250134*T7 - 333.5507775553348*T8 + 121.29147704125069*T9 -
	17.1556447046427*T10)/
	(189.30433417113048 - 1007.7250064961569*T + 2157.938044817338*T2 - 2186.1853677466547*T3 + 680.4998075037523*T4 +
	632.8823616536517*T5 - 590.085899407071*T6 + 50.80375306281021*T7 + 109.62729069676597*T8 - 40.81865517144528*T9 +
	3.833720025887098*T10);
#endif
#else
   beta_bulk = 0;
#endif
   return beta_bulk;
}


// seperate this? this is only used in initial conditions (negligible cost to be super accurate)
precision equilibrium_energy_density(precision T, precision conformal_prefactor)
{
	double e;

#ifdef LATTICE_QCD			// energy density from BEST collaboration
#ifdef BEST

	double T1 = (double)T;
	double T2 = T1 * T1;
	double T3 = T2 * T1;
	double T4 = T3 * T1;
	double T5 = T4 * T1;
	double T6 = T5 * T1;
	double T7 = T6 * T1;
	double T8 = T7 * T1;
	double T9 = T8 * T1;
	double T10 = T9 * T1;
	double T11 = T10 * T1;
	double T12 = T11 * T1;
	double T13 = T12 * T1;
	double T14 = T13 * T1;
	double T15 = T14 * T1;
	double T16 = T15 * T1;
	double T17 = T16 * T1;
	double T18 = T17 * T1;
	double T19 = T18 * T1;
	double T20 = T19 * T1;

	e = (-0.002999930312462119 + 0.09417646213801027*T - 1.3472144415370244*T2 + 11.531744338662536*T3 - 65.17050664643754*T4 +
	252.96623410554895*T5 - 673.9895236411604*T6 + 1155.6029102124326*T7 - 910.3488025995453*T8 -
	971.3230107937379*T9 + 3724.9276204901016*T10 - 4118.540210991578*T11 - 78.52429756414836*T12 +
	5293.81004825622*T13 - 4557.553823074766*T14 - 3240.888013850884*T15 + 10697.194999962052*T16 -
	11211.426603636184*T17 + 6481.455655216752*T18 - 2082.163818010678*T19 + 293.70151601812523*T20)/
	(0.607428913591128 - 9.953288454061427*T + 73.64572871160192*T2 - 322.3694142746391*T3 + 912.7288538270155*T4 -
	1687.858513517085*T5 + 1840.856145562391*T6 - 470.3775809532542*T7 - 1924.6292185965883*T8 +
	3047.9613287381467*T9 - 1074.1083334677714*T10 - 2852.0884246377973*T11 + 5597.783660696195*T12 -
	5456.527953543836*T13 + 3464.3092713525684*T14 - 1521.9174635327095*T15 + 471.31297621425625*T16 -
	104.13673393295115*T17 + 16.227425444403956*T18 - 1.5313653054600316*T19 + 0.0661997114240791*T20);

 #else 						// energy density from the Wuppertal-Budapest collaboration
	double T1 = (double)T;
	double T2 = T1 * T1;
	double T3 = T2 * T1;
	double T4 = T3 * T1;
	double T5 = T4 * T1;
	double T6 = T5 * T1;
	double T7 = T6 * T1;
	double T8 = T7 * T1;
	double T9 = T8 * T1;
	double T10 = T9 * T1;
	double T11 = T10 * T1;
	double T12 = T11 * T1;
	double T13 = T12 * T1;
	double T14 = T13 * T1;
	double T15 = T14 * T1;
	double T16 = T15 * T1;
	double T17 = T16 * T1;
	double T18 = T17 * T1;
	double T19 = T18 * T1;
	double T20 = T19 * T1;
	double T21 = T20 * T1;
	double T22 = T21 * T1;
	double T23 = T22 * T1;

	e = (-0.6746595680417311 + 15.18004717055557*T - 150.28838666045098*T2 + 856.8728238453558*T3 - 3067.006874419056*T4 +
	6887.691793468362*T5 - 8689.01204393483*T6 + 2779.5133034548844*T7 + 7527.143247800599*T8 -
	7280.007098663352*T9 - 5948.659144649617*T10 + 9517.34072428892*T11 + 5432.293784982603*T12 -
	11518.267479577982*T13 - 3662.4391070118304*T14 + 11510.3287888067*T15 + 2190.1375458702637*T16 -
	14631.511315975464*T17 + 11753.561347532514*T18 - 4063.357489150804*T19 + 541.1883866332131*T20)/
	(-25.236559574714622 + 171.3985969608387*T - 470.68935437785206*T2 + 609.039379929916*T3 - 254.62577340009915*T4 -
	161.54720638956582*T5 + 41.634863182950326*T6 + 95.77801093178024*T7 + 271.26565801570024*T8 -
	228.11450258806724*T9 - 549.2377700940492*T10 + 558.3772963304361*T11 + 620.0220147386352*T12 -
	1369.1552177484705*T13 + 960.5451160750602*T14 - 299.88416268160154*T15 + 24.60448576154993*T16 +
	7.327185654554338*T17 - 1.6962229435786575*T18 + 0.20830329719464258*T19 - 0.01095197778233111*T20);
#endif

#else
	e = conformal_prefactor * T * T * T * T;
#endif
	return e;
}

