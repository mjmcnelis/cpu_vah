#include <math.h>
#include <cmath>
#include <stdlib.h>
#include "qcd.hpp"


double z_Quasi(double e)
{
  double e1 = e;
  double e2 = e * e;
  double e3 = e2 * e;
  double e4 = e3 * e;
  double e5 = e4 * e;
  double e6 = e5 * e;
  double e7 = e6 * e;
  double e8 = e7 * e;
  double e9 = e8 * e;
  double e10 = e9 * e;
  double e11 = e10 * e;
  double e12 = e11 * e;
  double e13 = e12 * e;
  double e14 = e13 * e;
  double e15 = e14 * e;
  double e16 = e15 * e;
  double e17 = e16 * e;
  double e18 = e17 * e;
  double e19 = e18 * e;
  double e20 = e19 * e;
  double e21 = e20 * e;
  double e22 = e21 * e;

  //return (2.2064872804471007e-10 + 6.691869897118333e-7*e1 + 0.000263852250133252*e2 + 0.01413357092241017*e3 - 0.3464413782317846*e4 + 1.98180021891993*e5 + 65.5806792728593*e6 - 923.7999247326214*e7 + 5481.788891647296*e8 - 76.37054809850152*e9 - 28553.98047279158*e10 + 46587.58267824485*e11 - 39744.97630431629*e12 + 17401.72773941676*e13 - 2771.6421673768527*e14 - 528.6157916742774*e15 + 283.5921191771914*e16 - 4.762438853774235*e17 + 6.600868897115251*e18 + 0.3653303028495624*e19 + 0.004512922146055228*e20 + 0.00001200936431999221*e21 + 4.636608681934221e-9*e22)/(2.5407895009079327e-11 + 9.006199802277486e-8*e1 + 0.00003873414690890585*e2 + 0.0023059658346415574*e3 - 0.04933736884483493*e4 + 0.13313737544741705*e5 + 12.73036446139203*e6 - 153.57439401617196*e7 + 788.8743854554027*e8 + 960.1927727905186*e9 - 6632.64624819255*e10 + 8591.46273703636*e11 - 5663.606268934622*e12 + 1047.4563526917996*e13 + 821.3750476427508*e14 - 535.2355688638489*e15 + 124.51029531844769*e16 - 3.396881376442303*e17 + 2.142507273175225*e18 + 0.18735796027116242*e19 + 0.003006292838407779*e20 + 9.20780972789995e-6*e21 + 4.000727477131975e-9*e22);

  // z_quasi BEST in cpu_vah code viscous hydro version

  return (-6.921627474395535e-11 - 2.068820219007291e-7*e1 - 0.00008004794094185476*e2 - 0.004170294272191056*e3 + 0.09994318330775476*e4 - 0.6028049712926495*e5 - 17.32997254829035*e6 + 221.86420008446356*e7 - 1161.528708956738*e8 - 1723.4122240576517*e9 + 339.98693004139375*e10 - 1371.3149826668873*e11 - 333.6959481389614*e12 - 321.321802085032*e13 + 131.94753133513424*e14 - 122.69087685089039*e15 + 5.370697224359077*e16 - 6.052394085388524*e17 - 0.7038207218913564*e18 - 0.01757160010668318*e19 - 0.00012991380242842205*e20 - 2.4594753226751026e-7*e21 - 7.352913098840251e-11*e22)/(-7.977262417393307e-12 - 2.786830987719674e-8*e1 - 0.000011762180354256496*e2 - 0.0006815255296076517*e3 + 0.014251257515341783*e4 - 0.0445565524634568*e5 - 3.3945388533360994*e6 + 37.08500361346862*e7 - 166.1413947461126*e8 - 471.2995122873681*e9 + 116.40828587862126*e10 - 380.4316969931931*e11 + 14.113450070587334*e12 - 186.43236298050886*e13 + 78.29603797399548*e14 - 42.553940433457285*e15 + 1.8975639224075795*e16 - 1.6361357363557714*e17 - 0.3074277311308281*e18 - 0.010250374977627853*e19 - 0.00009012790614650718*e20 - 1.9169861873399123e-7*e21 - 6.394439165661743e-11*e22);

}

double energy_density(double T)
{

  double T1 = T;
  double T2 = T * T;
  double T3 = T2 * T;
  double T4 = T3 * T;
  double T5 = T4 * T;
  double T6 = T5 * T;
  double T7 = T6 * T;
  double T8 = T7 * T;
  double T9 = T8 * T;
  double T10 = T9 * T;
  double T11 = T10 * T;
  double T12 = T11 * T;
  double T13 = T12 * T;
  double T14 = T13 * T;
  double T15 = T14 * T;
  double T16 = T15 * T;
  double T17 = T16 * T;
  double T18 = T17 * T;
  double T19 = T18 * T;
  double T20 = T19 * T;

  //return (1.0284408608751376 - 20.562697364291083*T1 + 172.06457027306882*T2 - 767.6087591647179*T3 + 1878.410411531594*T4 - 2070.916231691121*T5 - 630.584793089034*T6 + 3532.0665183459464*T7 - 793.0746294792559*T8 - 3776.883285610245*T9 + 1032.625505585723*T10 + 3248.3534087134076*T11 - 555.4427488284217*T12 - 1665.864611568311*T13 - 372.8132685155629*T14 + 709.22697589085*T15 + 434.6656904290278*T16 - 285.93627418836525*T17 - 379.4067368417828*T18 + 75.19168125985422*T19 + 309.7524939730975*T20)/(-1.5798398330810708 + 7.921975233345301*T1 + 0.039852243851380066*T2 - 59.33437751341736*T3 + 164.97749220539225*T4 - 189.68631005770584*T5 - 29.82759830716962*T6 + 224.38602817307583*T7 - 27.376056290017214*T8 - 135.2284764786118*T9 - 19.130879700880545*T10 + 61.13857362044854*T11 + 28.646619000348064*T12 - 22.17645575969152*T13 - 21.776504621338482*T14 + 6.4911073982336305*T15 + 17.916117959073407*T16 + 5.141478498219737*T17 - 2.1422804869006895*T18 + 0.41896264836671054*T19 - 0.03244181297381083*T20);


  // equilibrium_energy_density BEST in cpu_vah code viscous hydro mode
  return (0.40627518438643867 - 11.011572539859957*T1 + 130.77928985869593*T2 - 877.6121918925887*T3 + 3535.421433912612*T4 - 8078.914267299846*T5 + 6439.154404609683*T6 + 15129.165217897591*T7 - 38768.2682434212*T8 - 8551.62549456636*T9 + 126398.49102427797*T10 - 76579.50897685449*T11 - 311008.5908671992*T12 + 508668.90387515235*T13 + 355111.33690457407*T14 - 2.0632279590489047e6*T15 + 3.1401856418813644e6*T16 - 2.69069250116831e6*T17 + 1.421083090444586e6*T18 - 443129.7467853764*T19 + 64263.40447458266*T20)/(-59.6120292971754 + 717.1241260536837*T1 - 3645.3702819435307*T2 + 9765.42393031536*T3 - 12832.431386201157*T4 + 142.82590432252346*T5 + 25186.86259123896*T6 - 28316.004650857147*T7 - 17930.007137334782*T8 + 77200.73271762159*T9 - 80850.88417786805*T10 + 23824.933947902435*T11 + 25225.154910216275*T12 - 21367.56797902718*T13 - 7567.354921918593*T14 + 20258.528356323113*T15 - 13624.52545866848*T16 + 4563.423116419881*T17 - 761.8274089342926*T18 + 76.44496845688465*T19 - 3.4969057033074002*T20);

}


















