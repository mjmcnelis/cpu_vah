run_hydro					= 1
tau_initial 				= 0.01
plpt_ratio_initial			= 0.001
quark_flavors				= 3.0
temperature_etas 			= 1
etas_min 					= 0.08
etas_slope 					= 0.85
constant_etas			 	= 0.2
freezeout_temperature_GeV	= 0.15
flux_limiter 				= 1.8
include_vorticity			= 0
energy_min 					= 1.e-5
pressure_min				= 1.e-8
regulation_scheme			= 1
rho_max						= 10.0
# freezeout_temperature_GeV	= 0.085, 0.150, 0.07
# Note: if parameter is an int or double type, value needs
#		to be an integer or decimal point (e.g. 1 or 1.0)

# run_hydro						type of hydrodynamic run						(int)
#								0 = semi-analytic run: outputs semi-analytic solution
#								1 = test hydro run: outputs hydro observables
#								2 = real hydro run: outputs freezeout surface
# tau_initial					initial longitudinal proper time (fm)			(double)
# plpt_ratio_initial			initial pl / pt ratio							(double)
# quark_flavors					number of quark flavors in conformal EoS		(double)
# temperature_etas	 			option to use temperature dependent eta/s 		(int)
#								0 = use constant_etas
#								1 = use a temperature parameterization
# etas_min						min etas value (temperature_etas = 1)			(double)
# etas_slope					etas slope (GeV^-1, temperature_etas = 1)		(double)
# constant_etas					constant value of eta/s (temperature_etas = 0)	(double)
# freezeout_temperature_GeV		freezeout temperature (GeV) 					(double)
#								0.150 (Bjorken test)
#								0.085 (Gubser test, should update)
# flux_limiter					flux limiter in KT algorithm = [1.0, 2.0]		(double)
# include_vorticity 			option to include vorticity in relaxation eqs.	(int)
#								0 = no vorticity terms
#								1 = add vorticity terms
# energy_min 					minimum energy density in grid (fm^-4)			(double)
# pressure_min					minimum pl or pt in grid (fm^-4)				(double)
# regulation_scheme				regulate magnitude of viscous T^\munu			(int)
#								0 = regulate the entire grid
#								1 = regulation cutoff in very viscous regions
# rho_max						regulation strength parameter (regulation_scheme = 0)	(double)